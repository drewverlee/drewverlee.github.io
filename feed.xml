<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><atom:link href="https://drewverlee.github.io/" rel="self" type="application/rss+xml"/><title>The Artificery</title><link>https://drewverlee.github.io/</link><description>A blog about Software Development.</description><lastBuildDate>Mon, 22 Jul 2024 22:41:58 -0500</lastBuildDate><generator>clj-rss</generator><item><guid>https://drewverlee.github.io/posts-output/2024-7-21-home</guid><link>https://drewverlee.github.io/posts-output/2024-7-21-home</link><title>Drew Verlee's Blog</title><description>If your coming here to get to know how I think about software then I would start with this piece I wrote recently called
Seven Troubleshooting Tips for Squashing Software Bugs.
After that, I suggest strolling through the Archives.</description><pubDate>Sun, 21 Jul 2024 00:00:00 -0500</pubDate></item><item><guid>https://drewverlee.github.io/posts-output/2021-8-26-css-optimizations</guid><link>https://drewverlee.github.io/posts-output/2021-8-26-css-optimizations</link><title>CSS: Optimizations and Organization</title><description>This post is about css with companion sections from a clojure perspective.The high level goal of CSS is to produce a visually appealing website. Humans appreciate the design, but it's machines that set the rules so it
pays to know the constraints and contracts. And as part of what makes something beautify is it's responsiveness and that means talking about optimizations.</description><pubDate>Thu, 26 Aug 2021 00:00:00 -0500</pubDate></item><item><guid>https://drewverlee.github.io/posts-output/2021-5-2-ring</guid><link>https://drewverlee.github.io/posts-output/2021-5-2-ring</link><title>A (poorly) animated introduction to Clojure's HTTP server library Ring</title><description>Ring helps your web server deliver cat pictures. end of story. Ok, well maybe there is more. Let's look at some code that sets up Jetty (our web server) that's adapted to used Ring. Keep in mind this means were juggling two concepts that work together. In this case, the Webserver program contains Ring:</description><pubDate>Sun, 02 May 2021 00:00:00 -0500</pubDate></item><item><guid>https://drewverlee.github.io/posts-output/2020-8-17-uri-parameters-to-datalog</guid><link>https://drewverlee.github.io/posts-output/2020-8-17-uri-parameters-to-datalog</link><title>Considering alternatives to the CommonURLParameters Language</title><description>Introduction</description><pubDate>Mon, 17 Aug 2020 00:00:00 -0500</pubDate></item><item><guid>https://drewverlee.github.io/posts-output/2020-7-19-minimal-shadow-cljs-with-deps-dev-setup</guid><link>https://drewverlee.github.io/posts-output/2020-7-19-minimal-shadow-cljs-with-deps-dev-setup</link><title>RDD with shadow cljs, deps, emacs and cider</title><description>update to postIn shadow-cljs 2.10.17 the refactor-nrepl middleware is automatically be added when found on the classpath. Should make this a little less confusing.</description><pubDate>Sun, 19 Jul 2020 00:00:00 -0500</pubDate></item><item><guid>https://drewverlee.github.io/posts-output/2020-6-8-learn-datomic-part-4</guid><link>https://drewverlee.github.io/posts-output/2020-6-8-learn-datomic-part-4</link><title>Learn Datomic - part 4</title><description>Reviewin Part two we covered queries e.g</description><pubDate>Sat, 06 Jun 2020 00:00:00 -0500</pubDate></item><item><guid>https://drewverlee.github.io/posts-output/2020-6-6-learn-datomic-cloud-part-1</guid><link>https://drewverlee.github.io/posts-output/2020-6-6-learn-datomic-cloud-part-1</link><title>Learn Datomic Cloud - part 1</title><description>Datomic CloudDatomic cloud is a managed service on AWS that lets us easily deploy your application code
alongside a persistent storage layer. How easily? Lets see.</description><pubDate>Sat, 06 Jun 2020 00:00:00 -0500</pubDate></item><item><guid>https://drewverlee.github.io/posts-output/2020-5-30-learn-datomic-part-3</guid><link>https://drewverlee.github.io/posts-output/2020-5-30-learn-datomic-part-3</link><title>Learn Datomic - part 3</title><description>ReviewIn part two we explored how datomic could mimic a document store. e.g</description><pubDate>Sat, 30 May 2020 00:00:00 -0500</pubDate></item><item><guid>https://drewverlee.github.io/posts-output/2020-4-18-learn-datomic-part-2</guid><link>https://drewverlee.github.io/posts-output/2020-4-18-learn-datomic-part-2</link><title>Learn Datomic - part 2</title><description>ReviewIn part one we created a database and learned to use the datomic query language to get some information.
In Datomic talk, that information is a set of "facts".</description><pubDate>Sat, 18 Apr 2020 00:00:00 -0500</pubDate></item><item><guid>https://drewverlee.github.io/posts-output/2020-4-13-learn-datomic-part-1</guid><link>https://drewverlee.github.io/posts-output/2020-4-13-learn-datomic-part-1</link><title>Learn Datomic - part 1</title><description>DatomicWere going to be learning about datomic. This is aimed at beginners.</description><pubDate>Sun, 12 Apr 2020 00:00:00 -0500</pubDate></item><item><guid>https://drewverlee.github.io/posts-output/2017-5-16-strategy</guid><link>https://drewverlee.github.io/posts-output/2017-5-16-strategy</link><title>Strategy Pattern</title><description>IntentDefine a family of algorithms, encapsulate each one, and make them interchangeable. Strategy lets the algorithm vary independently from clients that use it.</description><pubDate>Tue, 16 May 2017 00:00:00 -0500</pubDate></item><item><guid>https://drewverlee.github.io/posts-output/2017-5-16-state</guid><link>https://drewverlee.github.io/posts-output/2017-5-16-state</link><title>State Pattern</title><description>IntentAllow an object to alter its behavior when its internal state changes. The
object will appear to change its class.</description><pubDate>Tue, 16 May 2017 00:00:00 -0500</pubDate></item><item><guid>https://drewverlee.github.io/posts-output/2017-5-16-observer</guid><link>https://drewverlee.github.io/posts-output/2017-5-16-observer</link><title>Observer Pattern</title><description>IntentDefine a one-to-many dependency between objects so that when one object
changes state, all its dependents are notified and updated automatically.</description><pubDate>Tue, 16 May 2017 00:00:00 -0500</pubDate></item><item><guid>https://drewverlee.github.io/posts-output/2017-5-15-interpreter</guid><link>https://drewverlee.github.io/posts-output/2017-5-15-interpreter</link><title>Interpreter Pattern</title><description>IntentGiven a language, define a represention for its grammar along with an interpreter that uses the representation to interpret sentences in the language.</description><pubDate>Mon, 15 May 2017 00:00:00 -0500</pubDate></item><item><guid>https://drewverlee.github.io/posts-output/2017-5-15-memento</guid><link>https://drewverlee.github.io/posts-output/2017-5-15-memento</link><title>Memento Pattern</title><description>IntentWithout violating encapsulation, capture and externalize an objectâ€™s internal state so that the object can be restored to this state later.</description><pubDate>Mon, 15 May 2017 00:00:00 -0500</pubDate></item><item><guid>https://drewverlee.github.io/posts-output/2017-5-15-iterator</guid><link>https://drewverlee.github.io/posts-output/2017-5-15-iterator</link><title>Interator Pattern</title><description>IntentProvide a way to access the elements of an aggregate object sequentially without exposing its underlying representation.</description><pubDate>Mon, 15 May 2017 00:00:00 -0500</pubDate></item><item><guid>https://drewverlee.github.io/posts-output/2017-5-13-flyweight-pattern</guid><link>https://drewverlee.github.io/posts-output/2017-5-13-flyweight-pattern</link><title>Flyweight Pattern</title><description>Intent</description><pubDate>Sat, 13 May 2017 00:00:00 -0500</pubDate></item><item><guid>https://drewverlee.github.io/posts-output/2017-5-13-proxy</guid><link>https://drewverlee.github.io/posts-output/2017-5-13-proxy</link><title>Proxy Pattern</title><description>IntentThe Gang of Four book says the intent is:</description><pubDate>Sat, 13 May 2017 00:00:00 -0500</pubDate></item><item><guid>https://drewverlee.github.io/posts-output/2017-5-10-facade-pattern</guid><link>https://drewverlee.github.io/posts-output/2017-5-10-facade-pattern</link><title>Facade Pattern</title><description>IntentThe Gang of Four book says the intent is:</description><pubDate>Wed, 10 May 2017 00:00:00 -0500</pubDate></item><item><guid>https://drewverlee.github.io/posts-output/2017-5-9-decorator-pattern</guid><link>https://drewverlee.github.io/posts-output/2017-5-9-decorator-pattern</link><title>Decorator Pattern</title><description>Intent</description><pubDate>Tue, 09 May 2017 00:00:00 -0500</pubDate></item><item><guid>https://drewverlee.github.io/posts-output/2017-05-09-singleton</guid><link>https://drewverlee.github.io/posts-output/2017-05-09-singleton</link><title>Singleton Pattern</title><description>Intent</description><pubDate>Tue, 09 May 2017 00:00:00 -0500</pubDate></item><item><guid>https://drewverlee.github.io/posts-output/2017-5-8-adapter</guid><link>https://drewverlee.github.io/posts-output/2017-5-8-adapter</link><title>Adapter Pattern</title><description>###goalThe GOF book states the goal of the Adapter pattern is:</description><pubDate>Mon, 08 May 2017 00:00:00 -0500</pubDate></item><item><guid>https://drewverlee.github.io/posts-output/2017-5-08-factory-pattern</guid><link>https://drewverlee.github.io/posts-output/2017-5-08-factory-pattern</link><title>Factory Method Pattern</title><description>###IntentThe GOF pattern says the intent is:</description><pubDate>Mon, 08 May 2017 00:00:00 -0500</pubDate></item><item><guid>https://drewverlee.github.io/posts-output/2017-4-26-simple-by-design</guid><link>https://drewverlee.github.io/posts-output/2017-4-26-simple-by-design</link><title>Simple By Design</title><description>the Site is InteractiveGo ahead and change the words below:</description><pubDate>Wed, 26 Apr 2017 00:00:00 -0500</pubDate></item><item><guid>https://drewverlee.github.io/posts-output/2017-4-13-producer-consumer-pattern</guid><link>https://drewverlee.github.io/posts-output/2017-4-13-producer-consumer-pattern</link><title>Producer Consumer Problem</title><description>###Goal</description><pubDate>Thu, 13 Apr 2017 00:00:00 -0500</pubDate></item><item><guid>https://drewverlee.github.io/posts-output/2017-4-13-chain-of-responsibility</guid><link>https://drewverlee.github.io/posts-output/2017-4-13-chain-of-responsibility</link><title>Chain of Responsibility</title><description>###Goal</description><pubDate>Thu, 13 Apr 2017 00:00:00 -0500</pubDate></item><item><guid>https://drewverlee.github.io/posts-output/2017-4-12-abstract-factory-pattern</guid><link>https://drewverlee.github.io/posts-output/2017-4-12-abstract-factory-pattern</link><title>Abstract Factory Pattern</title><description>&lt;img src="/img/factory.jpg"###Intent</description><pubDate>Wed, 12 Apr 2017 00:00:00 -0500</pubDate></item><item><guid>https://drewverlee.github.io/posts-output/2017-4-11-builder-pattern</guid><link>https://drewverlee.github.io/posts-output/2017-4-11-builder-pattern</link><title>Builder Pattern</title><description>###Goal</description><pubDate>Tue, 11 Apr 2017 00:00:00 -0500</pubDate></item><item><guid>https://drewverlee.github.io/posts-output/2017-4-10-bridge-pattern</guid><link>https://drewverlee.github.io/posts-output/2017-4-10-bridge-pattern</link><title>Bridge Pattern</title><description>###Goal</description><pubDate>Mon, 10 Apr 2017 00:00:00 -0500</pubDate></item><item><guid>https://drewverlee.github.io/posts-output/2017-4-10-command-pattern</guid><link>https://drewverlee.github.io/posts-output/2017-4-10-command-pattern</link><title>Commander Pattern</title><description>###Goal
Commander Pattern is about controlling execution of a function on some data.###Implementation in clojure</description><pubDate>Mon, 10 Apr 2017 00:00:00 -0500</pubDate></item></channel></rss>